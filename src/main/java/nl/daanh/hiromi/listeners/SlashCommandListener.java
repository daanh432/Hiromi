package nl.daanh.hiromi.listeners;

import net.dv8tion.jda.api.events.interaction.ButtonClickEvent;
import net.dv8tion.jda.api.events.interaction.SlashCommandEvent;
import nl.daanh.hiromi.CommandManager;
import org.jetbrains.annotations.NotNull;

public class SlashCommandListener extends BaseListener {
    private final CommandManager commandManager;

    public SlashCommandListener(CommandManager commandManager) {
        this.commandManager = commandManager;
    }

    @Override
    public void onSlashCommand(@NotNull SlashCommandEvent event) {
        if (event.getUser().isBot() || event.getUser().isSystem() || event.isAcknowledged()) return;
        commandManager.handle(event);
    }

    @Override
    public void onButtonClick(@NotNull ButtonClickEvent event) {
        if (event.getUser().isBot() || event.getUser().isSystem() || event.isAcknowledged()) return;

        // TODO Prevent spoofing with some sort of cache key?
        // users can spoof this id so be careful what you do with this
        String[] data = event.getComponentId().split(":"); // this is the custom id we specified in our button
        if (data.length < 3) return;
        String authorId = data[0];

        // When storing state like this is it is highly recommended to do some kind of verification that it was generated by you, for instance a signature or local cache
        if (!authorId.equals(event.getUser().getId()))
            return;

        event.deferEdit().queue(); // acknowledge the button was clicked, otherwise the interaction will fail

        this.commandManager.handle(event, data);
    }
}
